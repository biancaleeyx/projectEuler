"""
Project Euler Problem 2: Even Fibonacci Numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

import copy

# Initialise two terms as the first two terms of the Fibonacci sequence.
a = 1
b = 2

# Initialise consequent term variable.
c = 0

# Initialise sum variable with even second term added.
x = 2

# Find the next term with condition: term less than or equal to four million.
while c <= 4000000:
    # Add to sum if term is even
    if c % 2 == 0:
        x += c

    # Find next term in sequence.
    # Use deepcopy to prevent unnecessary references.
    c = a + b
    tmpA = copy.deepcopy(b)
    tmpB = copy.deepcopy(c)
    a = copy.deepcopy(tmpA)
    b = copy.deepcopy(tmpB)

# Output sum.
print(x)